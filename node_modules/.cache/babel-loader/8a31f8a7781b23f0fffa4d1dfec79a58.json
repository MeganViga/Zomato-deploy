{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Full stack development edureka\\\\practice\\\\ZomatoPrototype\\\\zomato\\\\src\\\\component\\\\Search.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nvar url = \"http://localhost:8900/location\";\nvar resurl = \"http://localhost:8900/restauranthome?city=\";\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    this.handleLocation = data => {\n      var dup = [];\n\n      if (data) {\n        data.map(item => {\n          if (!dup.includes(item.city)) {\n            dup.push(item.city);\n            return /*#__PURE__*/React.createElement(\"option\", {\n              value: item.city,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 8\n              }\n            }, item.city_name);\n          }\n        });\n      }\n    };\n\n    this.handleCity = event => {\n      this.setState({\n        city: event.target.value\n      });\n      var city = parseFloat(event.target.value);\n      fetch(`${resurl}${city}`, {\n        method: 'GET'\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          restaurant: data\n        });\n      });\n    };\n\n    this.handleRestaurant = data => {\n      if (data) {\n        return data.map(item => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item._id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 11\n            }\n          }, item.name);\n        });\n      }\n    };\n\n    this.state = {\n      location: '',\n      city: '',\n      restaurant: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"find-rest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, \"Find the Best restaurants, cafes and bars\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"inputboxes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"inputbox1\",\n      className: \"inputbox\",\n      placeholder: \"Please type a location\",\n      onChange: this.handleCity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, this.handleLocation(this.state.location)), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"inputbox2\",\n      className: \"inputbox\",\n      placeholder: \"Search for restaurants\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, this.handleRestaurant(this.state.restaurant))));\n  }\n\n  componentDidMount() {\n    fetch(url, {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      return this.setState({\n        location: data\n      });\n    });\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["D:/Study/Full stack development edureka/practice/ZomatoPrototype/zomato/src/component/Search.js"],"names":["React","Component","render","url","resurl","Search","constructor","handleLocation","data","dup","map","item","includes","city","push","city_name","handleCity","event","setState","target","value","parseFloat","fetch","method","then","res","json","restaurant","handleRestaurant","_id","name","state","location","componentDidMount"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,IAAIC,GAAG,GAAG,gCAAV;AACA,IAAIC,MAAM,GAAE,4CAAZ;;AACA,MAAMC,MAAN,SAAqBJ,SAArB,CAA8B;AAE5BK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAShBC,cATgB,GASEC,IAAD,IAAU;AACzB,UAAIC,GAAG,GAAE,EAAT;;AACD,UAAGD,IAAH,EAAQ;AACNA,QAAAA,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAU;AACjB,cAAG,CAAEF,GAAG,CAACG,QAAJ,CAAaD,IAAI,CAACE,IAAlB,CAAL,EAA8B;AAC5BJ,YAAAA,GAAG,CAACK,IAAJ,CAASH,IAAI,CAACE,IAAd;AACA,gCACA;AAAQ,cAAA,KAAK,EAAEF,IAAI,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA2BF,IAAI,CAACI,SAAhC,CADA;AAGD;AACF,SAPD;AAQD;AACC,KArBa;;AAAA,SAsBhBC,UAtBgB,GAsBHC,KAAD,IAAW;AACnB,WAAKC,QAAL,CAAc;AAACL,QAAAA,IAAI,EAACI,KAAK,CAACE,MAAN,CAAaC;AAAnB,OAAd;AACA,UAAIP,IAAI,GAAGQ,UAAU,CAACJ,KAAK,CAACE,MAAN,CAAaC,KAAd,CAArB;AACAE,MAAAA,KAAK,CAAE,GAAElB,MAAO,GAAES,IAAK,EAAlB,EAAoB;AAACU,QAAAA,MAAM,EAAC;AAAR,OAApB,CAAL,CAAyCC,IAAzC,CAA+CC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAvD,EAAmEF,IAAnE,CAAyEhB,IAAD,IAAU;AAAE,aAAKU,QAAL,CAAc;AAACS,UAAAA,UAAU,EAACnB;AAAZ,SAAd;AAAiC,OAArH;AAEH,KA3Be;;AAAA,SA4BhBoB,gBA5BgB,GA4BIpB,IAAD,IAAU;AAC3B,UAAGA,IAAH,EAAQ;AACN,eACEA,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAU;AACjB,8BACE;AAAQ,YAAA,KAAK,EAAEA,IAAI,CAACkB,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACClB,IAAI,CAACmB,IADN,CADF;AAKD,SAND,CADF;AASD;AACF,KAxCe;;AAEZ,SAAKC,KAAL,GAAW;AACTC,MAAAA,QAAQ,EAAC,EADA;AAETnB,MAAAA,IAAI,EAAC,EAFI;AAGTc,MAAAA,UAAU,EAAC;AAHF,KAAX;AAMH;;AAiCDzB,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAG,MAAA,EAAE,EAAC,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADA,eAEE;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,EAAE,EAAC,WAAX;AAAuB,MAAA,SAAS,EAAC,UAAjC;AAA6C,MAAA,WAAW,EAAC,wBAAzD;AAAkF,MAAA,QAAQ,EAAE,KAAKc,UAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,cAAL,CAAoB,KAAKwB,KAAL,CAAWC,QAA/B,CADH,CADF,eAIE;AAAS,MAAA,EAAE,EAAE,WAAb;AAAwB,MAAA,SAAS,EAAC,UAAlC;AAA8C,MAAA,WAAW,EAAC,wBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKJ,gBAAL,CAAsB,KAAKG,KAAL,CAAWJ,UAAjC,CADD,CAJF,CAFF,CADF;AAeD;;AACCM,EAAAA,iBAAiB,GAAE;AACjBX,IAAAA,KAAK,CAACnB,GAAD,EAAK;AAACoB,MAAAA,MAAM,EAAC;AAAR,KAAL,CAAL,CAA0BC,IAA1B,CAAgCC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAxC,EAAoDF,IAApD,CAA0DhB,IAAD,IAAU;AAAC,aAClE,KAAKU,QAAL,CAAc;AAACc,QAAAA,QAAQ,EAACxB;AAAV,OAAd,CADkE;AAElE,KAFF;AAGD;;AAhE2B;;AAkE9B,eAAeH,MAAf","sourcesContent":["import React,{Component} from 'react'\r\nimport { render } from 'react-dom';\r\n\r\nvar url = \"http://localhost:8900/location\";\r\nvar resurl =\"http://localhost:8900/restauranthome?city=\";\r\nclass Search extends Component{\r\n\r\n  constructor() {\r\n    super()\r\n    this.state={\r\n      location:'',\r\n      city:'',\r\n      restaurant:''\r\n    }\r\n\r\n}\r\nhandleLocation = (data) => {\r\n  var dup =[]\r\n if(data){\r\n   data.map((item) => {\r\n     if(!(dup.includes(item.city))){\r\n       dup.push(item.city)\r\n       return(\r\n       <option value={item.city}>{item.city_name}</option>\r\n       )\r\n     }\r\n   })\r\n }\r\n  }\r\nhandleCity =(event) => {\r\n    this.setState({city:event.target.value})\r\n    var city = parseFloat(event.target.value);\r\n    fetch(`${resurl}${city}`,{method:'GET'}).then((res) => res.json()).then((data) => { this.setState({restaurant:data})})\r\n\r\n}\r\nhandleRestaurant = (data) => {\r\n  if(data){\r\n    return(\r\n      data.map((item) => {\r\n        return(\r\n          <option value={item._id}>\r\n          {item.name}\r\n          </option>\r\n        )\r\n      })\r\n    )\r\n  }\r\n}\r\nrender(){\r\n  return(\r\n    <div className=\"container\">\r\n    <p id=\"find-rest\">Find the Best restaurants, cafes and bars</p>\r\n      <div id=\"inputboxes\">\r\n        <select id=\"inputbox1\" className=\"inputbox\"  placeholder=\"Please type a location\" onChange={this.handleCity}>\r\n          {this.handleLocation(this.state.location)}\r\n        </select>\r\n        <select  id =\"inputbox2\"className=\"inputbox\"  placeholder=\"Search for restaurants\">\r\n        {this.handleRestaurant(this.state.restaurant)}\r\n        </select>\r\n      </div>\r\n\r\n  </div>\r\n  )\r\n\r\n}\r\n  componentDidMount(){\r\n    fetch(url,{method:'GET'}).then((res) => res.json()).then((data) => {return(\r\n      this.setState({location:data})\r\n    )})\r\n  }\r\n}\r\nexport default Search\r\n"]},"metadata":{},"sourceType":"module"}